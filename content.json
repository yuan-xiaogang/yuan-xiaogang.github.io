{"meta":{"title":"frank的博客","subtitle":null,"description":null,"author":"frank","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"vscode插件","slug":"vscode插件","date":"2019-07-26T00:56:28.000Z","updated":"2019-07-26T01:16:02.341Z","comments":true,"path":"2019/07/26/vscode插件/","link":"","permalink":"http://yoursite.com/2019/07/26/vscode插件/","excerpt":"","text":"htmlcss Easy LESS 自动less转css cssrem 自动转rem；默认rootfontSize 16px，需要修改配置； js随意 JS-CSS-HTML Formatter 格式化代码","categories":[],"tags":[{"name":"插件","slug":"插件","permalink":"http://yoursite.com/tags/插件/"}]},{"title":"重学前端-第7天","slug":"重学前端-第7天","date":"2019-07-25T07:30:14.000Z","updated":"2019-07-26T05:33:09.089Z","comments":true,"path":"2019/07/25/重学前端-第7天/","link":"","permalink":"http://yoursite.com/2019/07/25/重学前端-第7天/","excerpt":"目标： 媒体查询 less rem适配 bootstrap","text":"目标： 媒体查询 less rem适配 bootstrap 媒体查询媒体类型 all、print（打印机）、screen（屏幕）媒体关键词 and not only媒体特性 width min-width max-width 12345678910@media screen and (min-width: 320px) &#123; html &#123; font-size: 50px; &#125;&#125;@media screen and (min-width: 640px) &#123; html &#123; font-size: 100px; &#125;&#125; 引入资源 12&lt;link rel=&quot;stylesheet&quot; href=&quot;style320.css&quot; media=&quot;screen and (min-width: 320px)&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;style640.css&quot; media=&quot;screen and (min-width: 640px)&quot;&gt; 最好按照从小到大的顺序书写； lesshttp://lesscss.cn/ 官网 安装npm install -g less 查看版本lessc -v less变量@变量名: 值; 1234@color: pink;html &#123; background: @color;&#125; less编译 vscode插件 easy less less嵌套 12345678.header &#123; a &#123; color: red; &amp;:hover &#123; color: blue; &#125; &#125;&#125; less运算 12345678.box &#123; width: 100px * 2; height: 100px + 5; border-width: 5px - 2;&#125;img &#123; width: 80 / 50rem;&#125; 注意点：在运算符的左右需要加空格隔开；如果两个数都有单位，且单位不一致，以第一个单位为准； 导入文件 1@import &quot;common.less&quot; rem适配rem是一个单位，相对于html元素的font-size；em 是相对于父元素的font-size； rem+媒体查询+less现在一般以750为参考，将屏幕分为15等份（20,10），然后html的font-size为50px；` html文字大小 = 页面宽度 / 划分的份数元素的rem = 元素在屏幕内的px / html文字大小 屏幕常见尺寸： 320、360、375、384、400、414、424、480、540、720、750px flexible.js + remfelxible 是划分了10等份； bootstrap原理：媒体查询实现响应式； 设备划分 尺寸区间 宽度 手机 &lt; 768px 100% 平板 &gt;=768px ~ &lt; 992px 750px 中等屏幕 &gt;= 992px ~ &lt; 1200px 970px 宽屏设备 &gt;= 1200px 1170px 1http://bootstrap.html.cn/","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://yoursite.com/tags/移动端/"}]},{"title":"重学前端-第6天","slug":"重学前端-第6天","date":"2019-07-24T09:23:57.000Z","updated":"2019-07-25T07:16:57.866Z","comments":true,"path":"2019/07/24/重学前端-第6天/","link":"","permalink":"http://yoursite.com/2019/07/24/重学前端-第6天/","excerpt":"目标： 移动端基础 布局","text":"目标： 移动端基础 布局 移动端基础移动端浏览器兼容性比较好，主要出来webkit内核的兼容问题； 视口 viewport视口分为布局视口、视觉视口、理想视口； 布局视口 layout viewport 设备商默认980px 视觉视口 visual viewport 用户看到的网站区域 理想视口 ideal viewport meta标签 name12345678910111213141516#### 二倍图物理像素: 在开发中1px不一定等于一个物理像素；在pc端1px对应着一个物理像素； 物理像素比： 1px能显示物理像素的个数称为物理像素比；背景缩放： background-size: 背景宽度 背景高度; 只写一个参数，是等比例缩放； 单位：长度|百分比|cover|contain； cover 完全覆盖，可能有部分图片显示不全； contain 宽度或者高度适应到最大尺寸；#### 移动端解决方案移动端初始化 normalize.csscss3盒子模型 有一定的兼容问题（ie6、7、8） box-sizing: border-box;box-sizing: content-box; //传统盒子模型； 12特殊样式： /清除点击高亮样式/ -webkit-tap-highlight-color: transparent; /移动端浏览器加上此样式，才能给按钮和输入框自定义样式/ -webkit-appearance: none; /禁止长按页面弹出的菜单/ img, a { -webkit-touch-callout: none;} ``` 布局1、流式布局（百分比布局） max-width 最大宽度 手机端最大宽度640px min-width 最小宽度 手机端最小宽度320px 图片格式 dpg 2、flex弹性布局 任何一个盒子都可以指定为flex布局；当父盒子设置为flex布局时，子元素的float、clear、vertical-align都失效；容器常见属性（父盒子） flex-direction 设置主轴的方向；元素是跟着主轴方向排列的 值: row (从左到右) row-reverse（从右到左） column （从上到下） column-reverse（从下到上） justify-content 设置主轴上的子元素排列方式 值：flex-start flex-end center space-around（平分剩余位置） space-between（两边贴边，中间平分剩余位置） flex-wrap 设置子元素是否换行 值：nowrap（默认不换行） wrap（换行） align-content 设置侧轴上子元素的排列方式（多行） 适应于子元素换行的情况，在单行中无效果； 值： flex-start flex-end center space-between space-round stretch align-items 设置侧轴上子元素的排列方式（单行） 值： flex-start flex-end center stretch（拉伸，子盒子不要给高度） flex-flow 复合属性，同时设置 flex-direction 和 flex-wrap 项目常见属性（子项属性） flex 子项占据的份数，可以写百分比，相对于父元素； align-self 控制子项自己在侧轴的排列方式 order 定义子项的排列顺序（前后顺序） 值：数值越小越靠前；默认是0； 背景渐变线性渐变：background: linear-gradient(起始方向, 颜色1,颜色2,…);兼容性不好，需要加上前缀background: -webkit-linear-gradient(起始方向, 颜色1,颜色2,…); 3、less+rem+媒体查询布局4、混合布局5、媒体查询6、bootstarp","categories":[],"tags":[{"name":"移动端","slug":"移动端","permalink":"http://yoursite.com/tags/移动端/"}]},{"title":"重学前端-第5天","slug":"重学前端-第5天","date":"2019-07-23T10:27:44.000Z","updated":"2019-07-25T01:39:01.592Z","comments":true,"path":"2019/07/23/重学前端-第5天/","link":"","permalink":"http://yoursite.com/2019/07/23/重学前端-第5天/","excerpt":"目标： css3新增选择器 2d转换 动画 3d转换 私有前缀","text":"目标： css3新增选择器 2d转换 动画 3d转换 私有前缀 css3属性选择器123button[disabled] &#123; cursor: default;&#125; E[attr] 选择attr属性值的E元素； E[attr=”val”] 选择attr等于val的E元素； E[attr^=”val”] 选择attr以val开头的E元素； E[attr$=”val”] 选择attr以val结尾的E元素； E[attr*=”val”] 选择attr包含val的E元素； css3结构伪类选择器 E:first-child 匹配父元素中的第一个子元素 E:last-child 匹配父元素中的最后一个子元素 E:nth-child(n) 匹配父元素中的第n个子元素； n 可以是even（偶数）、odd（奇数）或者公式（n从0开始）2n+1、2n、n+5（从5开始）、-n+5（前面5个），0或者超出部分会被忽略掉； E:first-of-type 匹配父元素中的指定类型的第一个子元素 E:last-of-type 匹配父元素中的指定类型的最后一个子元素 E:nth-of-type(n) 匹配父元素中的指定类型的第n个子元素 css3伪元素选择器 ::before ::after 创建的元素是行内元素； 2d转换transform可以实现元素的位置移动、旋转、缩放等效果； translate transform: translate(x,y); 值：translateX,translateY 最大的优点：不会影响其他元素的位置； 百分比是相对于自身的高度和宽度；对行内标签没有效果； rotate 旋转 单位deg；默认中心点是元素的中心点； 设置中心点： transform-origin: x y; 中心点50% 50%；方位名词： left、right、top、bottom、center； scale 缩放 transform: scale(x,y); 只有一个参数，是宽高都等比缩放； 最大的优点：不会影响其他元素的位置，可以设置缩放的中心点； 设置中心点： transform-origin: x y; 综合写法： 旋转时会改变坐标轴的方向；建议将位移写到前面； 动画animation1、先定义好动画 使用keyframes定义动画2、调用动画 动画序列可以是百分比，可以是from（0%）、to（100%）； 123456789101112131415161718192021222324252627@keyframes move &#123; 0% &#123; transform: translateX(0px); &#125; 25% &#123; transform: translateX(1000px); &#125; 50% &#123; transform: translateX(1000px) translateY(400px); &#125; 75% &#123; transform: translate(0px,400px); &#125; 100% &#123; transform: translate(0px,0px); &#125; &#125; .out &#123; width: 400px; height: 400px; background: #eee; /* 动画名称 */ animation-name: move; /* 动画时间 */ animation-duration: 2s; &#125; 常用属性 - @keyframes 定义动画 - animation 动画简写，除animation-play-state属性 - animation-name 动画名称 - animation-duration 规定完成动画的时间，默认是0；（必填） - animation-timing-function 动画曲线 默认ease；linear（匀速） linear 匀速 ease 低速开始，然后加速，结束前减速 ease-in 低速开始 ease-out 低速结束 ease-in-out 低速开始和结束 steps(n) 指定了时间函数中的间隔数量（步长）；分几步完成动画；打字机效果； - animation-delay 规定动画从何时开始 - animation-iteration-count 默认为1，可以是infinite - animation-direction 规定动画下一个周期逆向播放，默认是normal，alternate（逆播放） - animation-play-state 规定动画是否正在运行或者暂停 默认running ，还有pause - animation-fill-mode 规定动画结束后状态， 保持forwards 回到初始 backwards（默认） 动画简写： 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束状态,动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束状态；前2个是不能省略；可以添加多个动画，以逗号隔开 3d转换特点：近大远小；物体后面遮挡不可见； x轴 水平向右y轴 垂直向下z轴 垂直屏幕 往外是正值，往里是负值；z轴就是物体距离屏幕的距离； 3d位移 translate3d(x,y,z)translateZ(10px) 一般跟px单位； 3d旋转 rotate3d(x,y,z) rotateX(45deg) 沿着x轴旋转； 左手法则 rotateY(45deg) 沿着y轴旋转； rotateZ(45deg) 沿着z轴旋转； rotate3d(x,y,z,45deg) 沿着自定义轴旋转； 透视 perspective模拟人的眼睛去观察；视距；人的眼睛到屏幕的距离；视距离电脑越近，成像越大，越远，成像越小；单位是像素；透视写在被观察盒子的父盒子上面；z轴越大，成像越大，z轴越小，成像越小； perspective: 500px; 3d呈现 transform-style控制子元素是否开启三维立体环境；默认是不开启的；transform-style: preserve-3d;添加到父盒子上； 例子： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950body &#123; perspective: 1000px; &#125; @keyframes move &#123; 50% &#123; transform: rotateY(180deg); &#125; 100% &#123; transform: rotateY(360deg); &#125; &#125; .out &#123; width: 200px; height: 200px; position: relative; margin: 300px auto; transition: all 1s; transform-style: preserve-3d; animation: move 2s linear infinite forwards; &#125; .out:hover &#123; /* transform: rotateY(180deg); */ animation-play-state: paused; &#125; .zheng, .fan &#123; position: absolute; width: 100%; height: 100%; font-size: 30px; font-weight: 900; text-align: center; line-height: 200px; border-radius: 50%; &#125; .zheng &#123; background: pink; z-index: 3; &#125; .fan &#123; background: #ddd; transform: rotateY(180deg); z-index: 2; &#125; 私有前缀兼容老版本的浏览器；-moz- 兼容火狐-ms- 兼容ie-webkit- 兼容safari 、chrome-o- 兼容Opera","categories":[],"tags":[{"name":"css3","slug":"css3","permalink":"http://yoursite.com/tags/css3/"}]},{"title":"重学前端-第4天","slug":"重学前端-第4天","date":"2019-07-20T08:36:29.000Z","updated":"2019-07-24T01:11:36.304Z","comments":true,"path":"2019/07/20/重学前端-第4天/","link":"","permalink":"http://yoursite.com/2019/07/20/重学前端-第4天/","excerpt":"目标： h5新增语义化标签 h5新增多媒体标签 h5新增input表单、表单属性","text":"目标： h5新增语义化标签 h5新增多媒体标签 h5新增input表单、表单属性 h5新增语义化标签 header 头部标签 nav 导航标签 article 内容标签 section 块级标签 aside 侧边栏标签 footer 尾部标签 在ie9中 需要将这些元素转成块级元素，否则是不能使用的； h5新增多媒体标签音频 audio支持格式： mp3、wav、Ogg Vorbis 1&lt;audio src=&quot;文件地址&quot; controls=&quot;controls&quot;&gt;&lt;/audio&gt; 属性 autoplay 自动播放 值：autoplay; google浏览器默认把autoplay禁用； controls 显示控件，播放按钮； 值：controls 在每个浏览器内样式都是不同的； loop 当音频结束时，是否重新开始播放，循环； 值：loop src 音频地址； 因为每个浏览器支持的格式不一样，所以我们准备多个格式音频来解决； 12345&lt;audio controls=&quot;controls&quot;&gt; &lt;source src=&quot;happy.mp3&quot; type=&quot;audio/mpeg&quot;&gt; &lt;source src=&quot;happy.ogg&quot; type=&quot;audio/ogg&quot;&gt; 您的浏览器暂不支持audio标签&lt;/audio&gt; 视频 video支持格式： mpeg4、WebM、Ogg 1&lt;video src=&quot;文件地址&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt; 12345&lt;video&gt; &lt;source src=&quot;1.ogg&quot; type=&quot;video/ogg&quot;&gt; &lt;source src=&quot;1.mp4&quot; type=&quot;video/mp4&quot;&gt; 您的浏览器暂不支持video标签&lt;/video&gt; 属性： autoplay 自动播放 ；google浏览器默认把autoplay禁用， 解决方案： 给视频加静音属性； controls 播放控件 width 宽度 height 高度 loop 循环播放 preload 是否等加载完再播放 src 文件地址 poster 值：Imgurl 加载等待的画面图片 muted 静音播放 h5新增表单input type类型 type=”email” 邮箱 type=”url” 网址 type=”date” 日期 type=”time” 时间 type=”month” 月 type=”week” 周 type=”number” 数字 type=”tel” 电话号码 type=”search” 搜索框 type=”color” 颜色 表单属性 required 不能为空，必填； placeholder 提示文本； autofocus 自动聚焦 autocomplete 值：off/on；之前输入过的内容，再次输入时，提示，需要表单内加上name属性，并且成功提交过；off使用的比较多； mutiple 多选文件","categories":[],"tags":[{"name":"html5","slug":"html5","permalink":"http://yoursite.com/tags/html5/"}]},{"title":"重学前端-第3天","slug":"重学前端-第3天","date":"2019-07-19T02:10:01.000Z","updated":"2019-07-24T01:42:28.051Z","comments":true,"path":"2019/07/19/重学前端-第3天/","link":"","permalink":"http://yoursite.com/2019/07/19/重学前端-第3天/","excerpt":"注意点：pc端图片最好不要超过200kb尽量少使用通配符选择器","text":"注意点：pc端图片最好不要超过200kb尽量少使用通配符选择器 引入ico图标favicon.ico 1&lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot; /&gt; http://www.bitbug.net/ 制作ico图标 网站优化3大标签seo 搜索引擎优化title google 不允许超过35个中文 百度不允许超过28个中文 推荐： 网站名+网站描述description 不超过120字keyword 限制了6到8个关键词 123&lt;title&gt;Document&lt;/title&gt;&lt;meta name=&quot;description&quot; content=&quot;&quot; &gt;&lt;meta name=&quot;keyword&quot; content=&quot;&quot; &gt; 字体图标几乎支持所有的浏览器，体积比图片更小，移动端首选； 12345678910111213@font-face &#123; font-family: &apos;icomoon&apos;; src: url(&quot;fonts/icomoon.eot&quot;); src: url(&quot;fonts/icomoon.eot&quot;) format(&quot;embedded-opentype&quot;); src: url(&quot;fonts/icomoon.ttf&quot;) format(&quot;truetype&quot;); src: url(&quot;fonts/icomoon.woff&quot;) format(&quot;woff&quot;); src: url(&quot;fonts/icomoon.svg&quot;) format(&quot;svg&quot;); font-weight: normal; font-style: normal;&#125;div &#123; font-family: &quot;icomoon&quot;;&#125; https://icomoon.io/ 优化1、logo优化添加背景图 h1 标签h1 内包含a标签在a标签内添加文字，添加背景，告诉搜索引擎；（text-indent: -9999px;或者 font-size: 0;） 过渡123transition: 过渡属性 花费时间 运动曲线 何时开始, 过渡属性 花费时间 运动曲线 何时开始;运动曲线: linear（匀速） ease（缓慢下来） ease-in（加速） ease-out（减速） ease-in-out（先加速后减速） 获取焦点元素伪元素 获取焦点元素 1234input:focus &#123;&#125;","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://yoursite.com/tags/总结/"}]},{"title":"重学前端-第2天","slug":"重学前端-第2天","date":"2019-07-12T08:36:39.000Z","updated":"2019-07-24T01:35:22.708Z","comments":true,"path":"2019/07/12/重学前端-第2天/","link":"","permalink":"http://yoursite.com/2019/07/12/重学前端-第2天/","excerpt":"css可以美化我们的网页；设置版面布局和样式 css样式表 引入css样式的3种方式 1、行内式 写在标签内部的;开发中偶尔使用 &lt;div style=&quot;color: pink; font-size: 14px;&quot;&gt;行内式&lt;/div&gt; 2、内部样式表 123456789101112&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div &#123; color: pink; &#125; &lt;/style&gt;&lt;/head&gt; 3、外部样式表 &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt; rel 定义引入文件类型 必须写","text":"css可以美化我们的网页；设置版面布局和样式 css样式表 引入css样式的3种方式 1、行内式 写在标签内部的;开发中偶尔使用 &lt;div style=&quot;color: pink; font-size: 14px;&quot;&gt;行内式&lt;/div&gt; 2、内部样式表 123456789101112&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div &#123; color: pink; &#125; &lt;/style&gt;&lt;/head&gt; 3、外部样式表 &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt; rel 定义引入文件类型 必须写 选择器作用： 选择标签 基础选择器 标签选择器 设置同类标签样式 类选择器 标签内添加class=”” ，用于差异化选择；多类名使用空格隔开命名规范： 不要纯数字或者中文，尽量使用英文；多个单词之间可以使用中横线隔开 id选择器， 元素的id是唯一的； 通配符选择器 * 尽量少用此选择器 复合选择器 后代选择器 更加准确地选择标签 123.out div &#123; color: pink; &#125; 子元素选择器 123.out &gt; div &#123; color: pink; &#125; 交集选择器 123p.out &#123; color: pink; &#125; 并集选择器 123p, .out &#123; color: pink; &#125; 伪类选择器a:link 未访问的链接a:visited 访问过的链接a:hover 悬浮时a:active 激活时，鼠标未放开时状态顺序记忆： lv ha font字体 font-size: 字号大小 font-family: 字体 ；多个字体以逗号隔开；中文字体尽量加引号 font-weight: 字体粗细 默认是normal，bold加粗，bolder，lighter细体；100-900也可以表示粗细程度，400=normal，700=bold font-style: 字体风格（倾斜） normal, italic 倾斜 综合写法：font: italic 700 20px &#39;微软雅黑&#39;; font: font-style font-weight font-size font-family;一定不能省略font-size和font-family，顺序不能更改 css外观属性color：文本颜色 预定颜色值、16进制颜色值、rgb代码line-height：行间距 一般比字号大7、8像素 一行文字由4条线组成： 顶线，中线，基线，底线；基线与基线之间的距离称为行高； 行高 = 上距离+文字+下距离 行高=高度 垂直居中； 行高&gt;高度 文字偏下； 行高&lt;高度 文字偏上text-align：文本水平对齐方式 center left right； text-align: center; 对行内元素、行内块元素都是起作用的；text-indent：首行缩进，一般使用2emtext-decoration： 文本装饰 none 、underline（文本下的线） 、overline（上划线）、 line-through（贯穿线） list-style: none; 取消ul标签左侧点的样式盒子阴影：box-shadow: 水平阴影 垂直阴影 模糊距离（虚实） 阴影尺寸 阴影颜色 内外阴影； 1box-shadow: 0 15px 30px #000; 标签的显示模式1、行内元素 display: inline; 常见的行内元素： a span b strong i em del s ins u； 注意点：高宽设置无效；span内最好不要放div；a标签内最好不放a标签；2、行内块元素 display: inline-block; 常见的行内块元素： img td input； 注意点：行内块元素之间会有一个间距，很难去掉；3、块级元素 display: block; 常见的块级元素： h1-h6 div ul ol li p； 注意点： p里面最好不要放置div； css背景 background-color 背景颜色 默认颜色 transparent background-image 背景图片 background-repeat 图片平铺 no-repeat repeat-x repeat-y ； 默认repeat background-position 背景位置 （x轴坐标， y轴坐标） 参数：length 或者 position；如果只指定了一个值，另外一个值是默认居中；后面跟方位名词时跟两个值的顺序无关； background-attachment 背景附着 scroll fixed ； fixed 背景固定；scroll 背景跟随页面滚动 背景透明 background： rgba(0,0,0,.2); 背景简写： 背景颜色 背景图片 背景平铺 背景滚动 背景位置；对顺序没有做区分； css盒模型margin（外边距）+ border（边框）+ padding（内边距）+ content（内容） 插入图片和背景图片，一般背景图片使用的比较少，像一些小图标使用或者超大背景图，展示使用的最多是插入图片； 外边距合并：出现在相邻元素垂直方向上；嵌套元素解决外边距合并： 1、尽量只给一个盒子margin值（相邻元素） 2、为父元素指定边框（嵌套元素） 3、为父元素添加padding（嵌套元素） 4、为父元素添加overflow：hidden（嵌套元素） 使用顺序： width padding（会影响盒子大小） margin（ie下会出现加倍的bug）； 如果盒子有浮动属性(float)，就不会出现外边距塌陷问题； border 边框 border-color 边框的颜色 border-width 边框的宽度 border-style solid（实线）、dashed（虚线）、dotted（点线）简写： border-width border-style border-color； 对顺序没有做区分； 1border-collapse: collapse; // 合并边框;只对表格合并边框有效 圆角边框css3： border-radius: length;border-radius: 左上角 右上角 右下角 左下角; padding 内边距 内容距离边框的距离；会影响盒子的大小（撑开盒子）； margin 外边距 块级盒子水平居中（有宽度） margin: 0 auto; css三大特性 1、层叠性 多种css样式的叠加；就近原则；样式不冲突不层叠； 2、继承性 子标签会继承父标签的部分样式；text-、font-、line-开头的属性以及color可以继承的；可以降低css的复杂性； 3、css优先级 选择器 权重 *、继承 0,0,0,0 标签选择器，伪元素选择器 0,0,0,1 类选择器，伪类选择器，属性选择器 0,0,1,0 id选择器 0,1,0,0 行内样式 1,0,0,0 !important 无穷大 权重可以叠加；权限是没有进位的； 浮动网页布局的三种机制：1、标准流2、浮动3、定位 1float: none | left | right; 浮动最早来做文字环绕图片的效果；后来浮动用来做布局；浮动的元素是在标准流上面的，不占位置，脱留标准流；浮动会改变元素的display属性，转化成行内块元素；如果父盒子装不下浮动的盒子，会另起一行展示；一般给浮动元素添加一个标准流的父元素，减少浮动元素对标准流的影响； 子盒子浮动是参照父盒子对齐的，不要压着边框和padding值；浮动盒子只会影响后面的标准流，不会影响到前面的标准流； 清除浮动：原因： 很多情况下，不方面给父盒子高度，需要清除浮动带来的影响，让子盒子自动撑开盒子；clear: left | right | both;工作中使用最多的就是both属性；无高度的父元素需要清除浮动； 1、额外标签法在浮动元素的末尾添加一个空标签； 1&lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt; 缺点： 添加很多无意义的标签；w3c比较推荐； 2、父级添加overflow属性overflow: hidden | auto | scroll; 3、after伪元素（针对父级元素） 12345678910.clearfix:after &#123; content: &apos;&apos;; display: block; height: 0; visibility: hidden; clear: both;&#125;.clearfix &#123; *zoom: 1; // ie6、7专门清除浮动的样式属性&#125; 4、双伪元素（针对父级元素） 1234567891011.clearfix:before,.clearfix:after &#123; content: &apos;&apos;; display: table;&#125;.clearfix:after &#123; clear: both;&#125;.clearfix &#123; *zoom: 1; // ie6、7专门清除浮动的样式属性&#125; css定位定位 = 定位模式+边偏移(top,bottom,left,right)top、bottom尽量不要同时使用；left、right尽量不要同时使用； 定位模式： static（静态定位） relative（相对定位） absolute（绝对定位） fixed（固定定位） static（静态定位） 元素默认的方式； relative（相对定位） 相对自身原来的位置，原来的位置依然保留着； absolute（绝对定位） 如果父级没有定位，以浏览器为准；如果父级有定位，绝对定位的盒子以父级为准；看离自身最近的父级（向上找）定位为准；子绝父相； 不保留位置，完全脱标；模式转换；不会触发外边距合并问题； fixed（固定定位） 固定在浏览器中的某个位置，完全脱标，以浏览器的可视窗口为基准点对齐；不随着浏览器滚动而滚动；一些低版本的ie 6不支持此属性；模式转换； z-index 堆叠顺序 取值： 正整数 、0 、负整数； 数值越大，盒子越往上； css总结css书写顺序：1、布局属性2、自身属性（盒模型属性）3、文本属性 font-、text-、line-height 。。。4、其他属性 background、border-radius、css3属性。。。 元素的显示和隐藏 隐藏对象 display1display: none; 1、先隐藏位置 2、不保留位置 display: block; 显示元素 visibility： inherit （继承） visible（可视） hidden（隐藏） visibility: hidden; 1、先隐藏位置 2、保留位置 overflow 溢出 visible(默认，正常显示) hidden（超出部分隐藏） scroll auto （判断是否超出显示滚动条） 用户界面样式1、鼠标样式cursor： default pointer（小手） move（移动） text（文本） not-allowed (禁止) 2、轮廓线 outline开发中一般不会使用，一般都是去掉outline: none; 3、防止拖拽文本域resize: none; 4、vertical-align 垂直居中只针对行内元素、行内块元素； 1vertical-align: baseline (基线对齐) | top | middle | bottom; 5、图片底下会有一个空白缝隙 1vertical-align: top | middle | bottom; 或者将img 标签模式转换成块级元素 6、溢出文字省略号单行 1234width: 100px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis（省略） | clip (裁剪); 7、精灵图减轻服务器的压力；重点： background-position: x y; 8、滑动门 123&lt;a href=&quot;#&quot;&gt; &lt;span&gt;&lt;/span&gt;&lt;/a&gt; a 设置左侧背景span 设置右侧背景；文字在span内，可以撑开盒子； 9、三角形border边框模拟 12345678width: 0;height: 0;border-width: 10px;border-style: solid;border-color: red transparent transparent transparent;// 兼容问题font-size: 0;line-height: 0;","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]},{"title":"重学前端 第1天","slug":"重学前端-第1天","date":"2019-07-05T01:40:33.000Z","updated":"2019-07-23T05:42:29.846Z","comments":true,"path":"2019/07/05/重学前端-第1天/","link":"","permalink":"http://yoursite.com/2019/07/05/重学前端-第1天/","excerpt":"常见的浏览器 浏览器 内核 备注 ie trident edge Gecko google blink（webkit的分支） safari webkit opera blink 移动端的内核大部分使用的是webkit内核； web标准结构(html)、表现(css)、行为(js)","text":"常见的浏览器 浏览器 内核 备注 ie trident edge Gecko google blink（webkit的分支） safari webkit opera blink 移动端的内核大部分使用的是webkit内核； web标准结构(html)、表现(css)、行为(js) html标签1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 字符集gb2312 简体中文big5 繁体字gbk 包含简体中文和繁体UTF-8 包含所有 1&lt;meta charset=&quot;UTF-8&quot;&gt; 常用标签标签的语义化： 就是在合适的地方放上合适的标签； 标题标签 h1-h6 段落标签 p 水平线标签 &lt;hr /&gt; 换行标签 &lt;br /&gt; div、span 是无语义的，用于布局 注释标签 &lt;!--注释 --&gt; 文本格式化标签 b strong 都是加粗、strong具备语义 i em 倾斜 em更具语义 s del 删除线 del更具语义 u ins 下划线 ins更具语义 图像标签 img属性 src 图像路径 alt 替换文本 title 鼠标悬浮显示文本，提示文本 width 宽度 height 高度 border 边框， 几乎不用，使用css的border 链接标签 a属性 href 路径 target 打开方式，默认self；self 默认打开自身； _blank 打开新页面 锚点定位快速定位到页面某个位置；1、在某个位置创建id；2、&lt;a href=&quot;#id&quot;&gt;点击位置&lt;/a&gt; 禁止a标签跳转 1&lt;a href=&quot;javascript:;&quot;&gt;&lt;/a&gt; base标签包含在head标签内；定义全体链接的打开方式 1&lt;base target=&quot;_blank&quot; /&gt; 预格式化标签 pre认识空格和换行符 路径 相对路径 同级路径可以直接写文件名；从代码所在的文件出发 绝对路径 全路径（不提倡使用） 特殊字符&amp;nbsp; 空格&amp;lt; 小于号&amp;gt; 大于号更多的特殊符号，需要查询资料 表格表格是用来展示数据的；基本结构展示： 12345&lt;table&gt; &lt;tr&gt; &lt;td&gt;周一&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 表格属性 border 边框 单位像素 width 宽度 height 高度 align 设置表格在页面的水平对齐方式 left right center cellspacing 单元格之间的距离 cellpadding 单元格内容与边框的距离 th 表头单元格 居中加粗显示出来caption 表格标题 标签内部可以包含其他标签 合并单元格跨列合并 colspan （同一行合并多个列）跨行合并 rowspan （同一列合并多行） 复杂结构 1234567891011121314151617&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;周一&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;周一&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt;周一&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt; &lt;/table&gt; 列表 无序列表 ul liul里只能包含li 123&lt;ul&gt; &lt;li&gt;&lt;/li&gt;&lt;/ul&gt; 有序列表 ol li 123&lt;ol&gt; &lt;li&gt;&lt;/li&gt;&lt;/ol&gt; 自定义列表 12345&lt;dl&gt; &lt;dt&gt;北京&lt;/dt&gt; &lt;dd&gt;昌平区&lt;/dd&gt; &lt;dd&gt;东城区&lt;/dd&gt;&lt;/dl&gt; 表单input控件&lt;input type=&quot;text&quot; /&gt;type 属性 text 文本输入框 password 密码框 radio 单选按钮 checkbox 多选按钮 button 普通按钮 submit 提交按钮 reset 重置按钮 image 图片提交按钮 必须包含src属性 file 文本域 value 值 显示表单的值 name 属性 区别表单控件 checked 属性 表示默认选中状态 label标签1、直接包含表单 1234&lt;label&gt; 用户名 &lt;input type=&quot;text&quot; /&gt;&lt;/label&gt; 2、使用for=”id”来控制光标 文本域 textareacols、rows属性，不过实际开发中不使用，使用css来控制 下拉列表一般不会再开发中使用；由于在各个浏览器中表现的形式不同，很难修改其样式，会使用其他元素去模拟下拉列表 1234&lt;select&gt; &lt;option&gt;1&lt;/option&gt; &lt;option&gt;2&lt;/option&gt;&lt;/select&gt; 表单域 form action 属性 提交后端的url地址； method 方式， get/post name 区别不同的表单域","categories":[],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}]},{"title":"vue-cli3配置","slug":"vue-cli3配置","date":"2019-07-04T09:35:56.000Z","updated":"2019-07-04T09:36:29.151Z","comments":true,"path":"2019/07/04/vue-cli3配置/","link":"","permalink":"http://yoursite.com/2019/07/04/vue-cli3配置/","excerpt":"","text":"##","categories":[],"tags":[]},{"title":"gulp 搭建自己的工作流","slug":"gulp","date":"2019-07-04T03:23:38.000Z","updated":"2019-07-04T06:26:02.969Z","comments":true,"path":"2019/07/04/gulp/","link":"","permalink":"http://yoursite.com/2019/07/04/gulp/","excerpt":"准备工作1npm i gulp -g 新建项目文件，在根目录下创建gulpfile.js文件 提前定义了几个变量，方面更改文件路径 12const proSrc = &apos;src&apos;; // 项目文件夹const outSrc = &apos;dist&apos; // 输出code","text":"准备工作1npm i gulp -g 新建项目文件，在根目录下创建gulpfile.js文件 提前定义了几个变量，方面更改文件路径 12const proSrc = &apos;src&apos;; // 项目文件夹const outSrc = &apos;dist&apos; // 输出code 处理html暂时想到的： 对html进行压缩处理，其中htmlIsCompress 是控制是否压缩html的变量 12345678// 处理htmlgulp.task(&apos;html&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/**/*.html`) .pipe(gulpif(htmlIsCompress, htmlmin(&#123; collapseWhitespace: true &#125;))) .pipe(gulp.dest(outSrc))&#125;) 处理css 对css进行压缩处理, 使用cssIsCompress来控制 使用autoprefixer来添加前缀 使用postcss、postcss-px-to-viewport来做自适应 1234567891011121314151617181920212223const vwProcessors = [ pxtoviewport(&#123; viewportWidth: 1920, unitPrecision: 5, viewportUnit: &apos;vw&apos;, selectorBlackList: [], // 需要忽略的选择器 // exclude: [/reset.css/], // 需要排除的文件 minPixelValue: 1, mediaQuery: false &#125;)];// 处理cssgulp.task(&apos;css&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/css/*.css`) .pipe(postcss([autoprefixer()])) .pipe(postcss(vwProcessors)) .pipe(gulpif(cssIsCompress, cssmin(&#123; &quot;maxLineLen&quot;: 80, &quot;uglyComments&quot;: true &#125;))) .pipe(gulp.dest(`$&#123;outSrc&#125;/css`))&#125;) 处理js暂时只是做到了是否对js进行压缩 123456// 处理jsgulp.task(&apos;js&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/js/*.js`) .pipe(gulpif(jsIsCompress, uglify())) .pipe(gulp.dest(`$&#123;outSrc&#125;/js`))&#125;) 处理图片 imgIsCompress控制图片是否压缩 1234567// 处理图片gulp.task(&apos;images&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/images/*.&#123;png,jpeg,jpg,svg&#125;`) .pipe(gulpif(imgIsCompress, imagemin())) .pipe(gulp.dest(`$&#123;outSrc&#125;/images`))&#125;) 最后配置默认任务1234567// 清除dist文件gulp.task(&apos;deleteAll&apos;, function () &#123; return del(outSrc)&#125;)// defaultgulp.task(&apos;default&apos;, gulp.series(&apos;deleteAll&apos;, gulp.parallel(&apos;html&apos;, &apos;css&apos;, &apos;images&apos;, &apos;js&apos;))) 最后项目代码：https://github.com/yuan-xiaogang/gulp-work","categories":[],"tags":[]},{"title":"初使用hexo","slug":"hello","date":"2019-07-03T06:06:55.236Z","updated":"2019-07-26T06:58:58.114Z","comments":true,"path":"2019/07/03/hello/","link":"","permalink":"http://yoursite.com/2019/07/03/hello/","excerpt":"Create a new post创建新的文章 1$ hexo new \"My New Post\" More info: Writing","text":"Create a new post创建新的文章 1$ hexo new \"My New Post\" More info: Writing Run server启动服务器 1$ hexo server More info: Server Generate static files打包 1$ hexo generate More info: Generating Deploy to remote sites发布 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}