{"meta":{"title":"frank的博客","subtitle":null,"description":null,"author":"frank","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"重学前端 第1天","slug":"重学前端-第1天","date":"2019-07-05T01:40:33.000Z","updated":"2019-07-05T03:01:47.006Z","comments":true,"path":"2019/07/05/重学前端-第1天/","link":"","permalink":"http://yoursite.com/2019/07/05/重学前端-第1天/","excerpt":"","text":"常见的浏览器 浏览器 内核 备注 ie trident edge Gecko google blink（webkit的分支） safari webkit opera blink 移动端的内核大部分使用的是webkit内核； web标准结构(html)、表现(css)、行为(js) html标签123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; ####","categories":[],"tags":[]},{"title":"vue-cli3配置","slug":"vue-cli3配置","date":"2019-07-04T09:35:56.000Z","updated":"2019-07-04T09:36:29.151Z","comments":true,"path":"2019/07/04/vue-cli3配置/","link":"","permalink":"http://yoursite.com/2019/07/04/vue-cli3配置/","excerpt":"","text":"##","categories":[],"tags":[]},{"title":"gulp 搭建自己的工作流","slug":"gulp","date":"2019-07-04T03:23:38.000Z","updated":"2019-07-04T06:26:02.969Z","comments":true,"path":"2019/07/04/gulp/","link":"","permalink":"http://yoursite.com/2019/07/04/gulp/","excerpt":"准备工作1npm i gulp -g 新建项目文件，在根目录下创建gulpfile.js文件 提前定义了几个变量，方面更改文件路径 12const proSrc = &apos;src&apos;; // 项目文件夹const outSrc = &apos;dist&apos; // 输出code","text":"准备工作1npm i gulp -g 新建项目文件，在根目录下创建gulpfile.js文件 提前定义了几个变量，方面更改文件路径 12const proSrc = &apos;src&apos;; // 项目文件夹const outSrc = &apos;dist&apos; // 输出code 处理html暂时想到的： 对html进行压缩处理，其中htmlIsCompress 是控制是否压缩html的变量 12345678// 处理htmlgulp.task(&apos;html&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/**/*.html`) .pipe(gulpif(htmlIsCompress, htmlmin(&#123; collapseWhitespace: true &#125;))) .pipe(gulp.dest(outSrc))&#125;) 处理css 对css进行压缩处理, 使用cssIsCompress来控制 使用autoprefixer来添加前缀 使用postcss、postcss-px-to-viewport来做自适应 1234567891011121314151617181920212223const vwProcessors = [ pxtoviewport(&#123; viewportWidth: 1920, unitPrecision: 5, viewportUnit: &apos;vw&apos;, selectorBlackList: [], // 需要忽略的选择器 // exclude: [/reset.css/], // 需要排除的文件 minPixelValue: 1, mediaQuery: false &#125;)];// 处理cssgulp.task(&apos;css&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/css/*.css`) .pipe(postcss([autoprefixer()])) .pipe(postcss(vwProcessors)) .pipe(gulpif(cssIsCompress, cssmin(&#123; &quot;maxLineLen&quot;: 80, &quot;uglyComments&quot;: true &#125;))) .pipe(gulp.dest(`$&#123;outSrc&#125;/css`))&#125;) 处理js暂时只是做到了是否对js进行压缩 123456// 处理jsgulp.task(&apos;js&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/js/*.js`) .pipe(gulpif(jsIsCompress, uglify())) .pipe(gulp.dest(`$&#123;outSrc&#125;/js`))&#125;) 处理图片 imgIsCompress控制图片是否压缩 1234567// 处理图片gulp.task(&apos;images&apos;, function () &#123; return gulp.src(`$&#123;proSrc&#125;/images/*.&#123;png,jpeg,jpg,svg&#125;`) .pipe(gulpif(imgIsCompress, imagemin())) .pipe(gulp.dest(`$&#123;outSrc&#125;/images`))&#125;) 最后配置默认任务1234567// 清除dist文件gulp.task(&apos;deleteAll&apos;, function () &#123; return del(outSrc)&#125;)// defaultgulp.task(&apos;default&apos;, gulp.series(&apos;deleteAll&apos;, gulp.parallel(&apos;html&apos;, &apos;css&apos;, &apos;images&apos;, &apos;js&apos;))) 最后项目代码：https://github.com/yuan-xiaogang/gulp-work","categories":[],"tags":[]},{"title":"初使用hexo","slug":"hello-world","date":"2019-07-03T06:06:55.236Z","updated":"2019-07-04T06:16:33.600Z","comments":true,"path":"2019/07/03/hello-world/","link":"","permalink":"http://yoursite.com/2019/07/03/hello-world/","excerpt":"Create a new post创建新的文章 1$ hexo new \"My New Post\" More info: Writing","text":"Create a new post创建新的文章 1$ hexo new \"My New Post\" More info: Writing Run server启动服务器 1$ hexo server More info: Server Generate static files打包 1$ hexo generate More info: Generating Deploy to remote sites发布 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}